{"version":3,"sources":["webpack:///login/handLock/handLock.js","webpack:///./src/modules/login/handLock/handLock/handLock.vue","webpack:///./src/modules/login/component/handLock/handLock.vue","webpack:///handLock.vue","webpack:///handLock.vue?763c","webpack:///./src/modules/login/component/handLock/index.js","webpack:///./src/modules/login/handLock/handLock/main.js","webpack:///./src/modules/login/handLock/handLock/handLock.vue?ae02","webpack:///./src/modules/login/component/handLock/handLock.vue?1a47"],"names":["webpackJsonp","310","module","exports","__webpack_require__","injectStyle","ssrContext","Component","options","__file","373","435","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","n","name","props","normalColor","type","String","default","pointBgColor","pointActiveColor","lineActiveColor","errorColor","errorLineColor","errorTime","canWRatio","Number","computed","canW","this","winW","toFixed","canH","wrapH","parseInt","wrapW","data","winH","padding","ringR","ringLineW","ringMargin","circleR","lineW","ringArr","activeArr","lastX","lastY","activeIndex","handLock","ctx","errorTimer","methods","touchstart","e","clear","pageX","targetTouches","pageY","_resolveLocation","resolveLocation","x","y","isInRing","initAnimation","touchmove","preventDefault","_resolveLocation2","touchend","result","getHandLock","$emit","clearCanvas","drawActiveLine","drawLastActiveLine","drawActiveRing","initCanvas","canvasBg","$refs","canvas","vCanvas","ctxBg","getContext","width","height","drawOpacityBg","drawAllRing","clearRect","clearTimer","errorDraw","_this","setTimeout","clearTimeout","fillStyle","fillRect","drawRing","ringBorderCol","arguments","length","undefined","ringBg","drawCircle","r","styleCol","lineWidth","beginPath","arc","Math","PI","closePath","margin","x0","y0","i","arr","j","push","savePos","ringCenter","color","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","item","activeCircleR","err","return","drawLine","startX","startY","endX","endY","lineColor","moveTo","lineTo","strokeStyle","stroke","getWindowSize","window","innerWidth","innerHeight","getSizePer100","size","initSize","getOffsetCanvas","target","canWrap","canOffsetTop","getOffsetTop","offsetTop","offsetParent","canOffsetLeft","getOffsetLeft","offsetLef","offsetLeft","originX","originY","isLessThanR","sqrt","pow","abs","key","mounted","_this2","$nextTick","440","__WEBPACK_IMPORTED_MODULE_1__component_handLock__","components","vHandLock","pointList","isActive","toastTxt","handLockMinLen","showToast","os","phoneModel","setActivePoint","isLegal","jumpMainPage","reSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_showToast","jumpBack","back","jumpLoginPwdPage","T","Native","popWindow","backPage","params","jumpFingerPrintsPage","pushWindow","path","transparentTitle","showTitleBar","jumpPage","jumpUrl","go","getOs","Device","setBodyClassName","document","body","className","created","503","__WEBPACK_IMPORTED_MODULE_0__handLock_vue__","__WEBPACK_IMPORTED_MODULE_0__handLock_vue___default","d","a","508","__WEBPACK_IMPORTED_MODULE_1__handLock_vue__","__WEBPACK_IMPORTED_MODULE_1__handLock_vue___default","init","Cmp","842","848","932","render","_vm","_h","$createElement","_c","_self","staticClass","class","_v","_l","index","active","_e","ref","on","attrs","model","callback","$$v","expression","staticRenderFns","938","style","id"],"mappings":"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","file":"login/handLock/handLock.js","sourcesContent":["webpackJsonp([20],{\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(842)\n}\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(440),\n  /* template */\n  __webpack_require__(932),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-5f2b363e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\nComponent.options.__file = \"/src/modules/login/handLock/handLock/handLock.vue\"\n\n/***/ }),\n\n/***/ 373:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(848)\n}\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(435),\n  /* template */\n  __webpack_require__(938),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-6912e334\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\nComponent.options.__file = \"/src/modules/login/component/handLock/handLock.vue\"\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(135);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'vCanvas',\n    props: {\n        // 基础颜色，圆环颜色\n        normalColor: {\n            type: String,\n            default: '#A0AAAD'\n        },\n        // 圆点颜色\n        pointBgColor: {\n            type: String,\n            default: 'rgba(111, 122, 126, .7)'\n        },\n        // 圆点激活颜色\n        pointActiveColor: {\n            type: String,\n            default: '#ffffff'\n        },\n        // 连接线激活颜色\n        lineActiveColor: {\n            type: String,\n            default: 'rgba(255, 255, 255, .3)'\n        },\n        // 显示错误的时候的颜色\n        errorColor: {\n            type: String,\n            default: '#FF3F3F'\n        },\n        // 绘制错误的时候的线条颜色\n        errorLineColor: {\n            type: String,\n            default: 'rgba(255, 63, 63, .3)'\n        },\n        // 错误手势密码显示时间(ms)\n        errorTime: {\n            type: String,\n            default: '3000'\n        },\n        // canvas宽度占屏幕宽度比例\n        canWRatio: {\n            type: Number,\n            default: 0.7\n        }\n    },\n    computed: {\n        canW: function canW() {\n            return (this.winW * this.canWRatio).toFixed(2);\n        },\n        canH: function canH() {\n            return this.canW;\n        },\n        wrapH: function wrapH() {\n            return parseInt(this.canH / 4);\n        },\n        wrapW: function wrapW() {\n            return parseInt(this.canW / 4);\n        }\n    },\n    data: function data() {\n        return {\n            // 窗口宽度\n            winH: 0,\n            winW: 0,\n            // 内边距\n            padding: 0,\n            // 圆环半径\n            ringR: 0,\n            // 圆环边框宽度\n            ringLineW: 0,\n            // 圆环上下左右间距\n            ringMargin: 0,\n            // 内圆半径\n            circleR: 0,\n            // 连接线宽度\n            lineW: 0,\n            // 圆环数组，记录绘制起点及圆心位置\n            ringArr: [],\n            // 记录激活的点的坐标\n            activeArr: [],\n            // 触摸的最后的坐标\n            lastX: 0,\n            lastY: 0,\n            // 记录激活坐标点对象, 用于判断是否重复的点\n            activeIndex: {},\n            // 存储手势密码坐标点数组，包括顺讯及所有激活的点\n            handLock: [],\n            ctx: null,\n            // 错误显示定时器对象\n            errorTimer: null\n        };\n    },\n\n    methods: {\n        touchstart: function touchstart(e) {\n            this.clear();\n            var pageX = e.targetTouches[0].pageX;\n            var pageY = e.targetTouches[0].pageY;\n            // 获取坐标\n\n            var _resolveLocation = this.resolveLocation(pageX, pageY),\n                x = _resolveLocation.x,\n                y = _resolveLocation.y;\n\n            this.lastX = x;\n            this.lastY = y;\n            // 判断是否在圆上\n            this.isInRing(x, y);\n            this.initAnimation();\n        },\n        touchmove: function touchmove(e) {\n            e.preventDefault();\n            var pageX = e.targetTouches[0].pageX;\n            var pageY = e.targetTouches[0].pageY;\n            // 获取坐标\n\n            var _resolveLocation2 = this.resolveLocation(pageX, pageY),\n                x = _resolveLocation2.x,\n                y = _resolveLocation2.y;\n\n            this.lastX = x;\n            this.lastY = y;\n            // 判断是否在圆上\n            this.isInRing(x, y);\n            this.initAnimation();\n        },\n        touchend: function touchend(e) {\n            this.initAnimation();\n            var result = this.getHandLock();\n            this.$emit('getHandLock', result);\n        },\n\n        // 定义动画执行的 一系列函数\n        initAnimation: function initAnimation() {\n            this.clearCanvas();\n            this.drawActiveLine();\n            this.drawLastActiveLine(this.lastX, this.lastY);\n            this.drawActiveRing();\n        },\n\n        // 初始化canvas\n        initCanvas: function initCanvas() {\n            this.canvasBg = this.$refs.canvasBg;\n            this.canvas = this.$refs.vCanvas;\n            this.ctxBg = this.canvasBg.getContext('2d');\n            this.ctx = this.canvas.getContext('2d');\n            var canvas = this.canvas;\n            var canvasBg = this.canvasBg;\n            canvas.width = this.canW;\n            canvas.height = this.canH;\n            canvasBg.width = this.canW;\n            canvasBg.height = this.canH;\n            this.drawOpacityBg();\n            this.drawAllRing(this.ctxBg);\n        },\n\n        // 输出手势密码结果\n        // @return [1, 2, 3]\n        getHandLock: function getHandLock() {\n            return this.handLock;\n        },\n\n        // 清空画布\n        clearCanvas: function clearCanvas() {\n            this.ctx.clearRect(0, 0, this.canW, this.canH);\n        },\n\n        // 清空绘制的 reset\n        clear: function clear() {\n            this.clearTimer();\n            this.handLock = [];\n            this.activeArr = [];\n            this.activeIndex = {};\n            this.clearCanvas();\n            this.$emit('clear');\n        },\n\n        // 错误显示绘制\n        errorDraw: function errorDraw() {\n            var _this = this;\n\n            this.clearCanvas();\n            this.drawActiveRing(this.errorColor);\n            this.drawActiveLine(this.errorLineColor);\n            this.errorTimer = setTimeout(function () {\n                _this.clear();\n                clearTimeout(_this.errorTimer);\n                _this.errorTimer = null;\n            }, this.errorTime);\n        },\n\n        // 清除定时器对象\n        clearTimer: function clearTimer() {\n            if (this.errorTimer) {\n                clearTimeout(this.errorTimer);\n                this.errorTimer = null;\n            }\n        },\n\n        // 绘制透明背景\n        drawOpacityBg: function drawOpacityBg() {\n            this.ctxBg.fillStyle = 'rgba(255, 255, 255, 0)';\n            this.ctxBg.fillRect(0, 0, this.canW, this.canH);\n        },\n\n        // 绘制圆环\n        drawRing: function drawRing(ctx, x, y) {\n            var ringBorderCol = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.normalColor;\n\n            var ringR = this.ringR;\n            var ringLineW = this.ringLineW;\n            ringBorderCol = ringBorderCol;\n            var ringBg = this.pointBgColor;\n            this.drawCircle(ctx, x, y, ringR, 'fill', ringBg);\n            this.drawCircle(ctx, x, y, ringR, 'stroke', ringBorderCol, ringLineW);\n        },\n\n        // 绘制圆环或者圆\n        drawCircle: function drawCircle(ctx, x, y, r, type, styleCol) {\n            var lineW = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n\n            ctx.lineWidth = lineW;\n            ctx.beginPath();\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx[type + 'Style'] = styleCol;\n            ctx[type]();\n        },\n\n        // 生成九个圆环\n        drawAllRing: function drawAllRing(ctx) {\n            var ringBorderCol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.normalColor;\n\n            // 圆环间距\n            var margin = this.ringMargin;\n            var x0 = this.padding + this.ringR;\n            var y0 = this.padding + this.ringR;\n            var x = void 0,\n                y = void 0;\n            for (var i = 0; i < 3; i++) {\n                y = y0 + i * (margin + 2 * this.ringR);\n                var arr = [];\n                for (var j = 0; j < 3; j++) {\n                    x = x0 + j * (margin + 2 * this.ringR);\n                    this.drawRing(ctx, x, y, ringBorderCol);\n                    arr.push(this.savePos(x, y));\n                }\n                this.ringArr.push(arr);\n            }\n        },\n\n        // 存储圆环的绘制位置以及圆心位置\n        savePos: function savePos(x, y) {\n            var obj = {\n                ringCenter: {\n                    x: x,\n                    y: y\n                }\n            };\n            return obj;\n        },\n\n        // 绘制激活的圆环\n        drawActiveRing: function drawActiveRing() {\n            var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.pointActiveColor;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.activeArr), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var item = _step.value;\n\n                    var x = item.ringCenter.x;\n                    var y = item.ringCenter.y;\n                    var activeCircleR = this.circleR;\n                    this.drawCircle(this.ctx, x, y, this.ringR, 'stroke', color, this.ringLineW);\n                    this.drawCircle(this.ctx, x, y, activeCircleR, 'fill', color);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        },\n\n        // 绘制连接线\n        drawLine: function drawLine(startX, startY, endX, endY, lineColor) {\n            var ctx = this.ctx;\n            ctx.lineWidth = 20;\n            ctx.beginPath();\n            ctx.moveTo(startX, startY);\n            ctx.lineTo(endX, endY);\n            ctx.closePath();\n            ctx.strokeStyle = lineColor;\n            ctx.stroke();\n        },\n\n        // 绘制激活的点的连接线\n        drawActiveLine: function drawActiveLine() {\n            var lineColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lineActiveColor;\n\n            if (this.activeArr.length < 2) return;\n            for (var i = 0; i < this.activeArr.length - 1; i++) {\n                var startX = this.activeArr[i].ringCenter.x;\n                var startY = this.activeArr[i].ringCenter.y;\n                var endX = this.activeArr[i + 1].ringCenter.x;\n                var endY = this.activeArr[i + 1].ringCenter.y;\n                this.drawLine(startX, startY, endX, endY, lineColor);\n            }\n        },\n\n        // 绘制最后一点到手指位置的连接线\n        drawLastActiveLine: function drawLastActiveLine(lastX, lastY) {\n            if (this.activeArr.length < 1) return;\n            var startX = this.activeArr[this.activeArr.length - 1].ringCenter.x;\n            var startY = this.activeArr[this.activeArr.length - 1].ringCenter.y;\n            this.drawLine(startX, startY, lastX, lastY);\n        },\n\n        // 获取当前窗口大小, 4 扩大四倍 ，解决高分屏模糊问题\n        getWindowSize: function getWindowSize() {\n            this.winW = window.innerWidth * 4;\n            this.winH = window.innerHeight * 4;\n        },\n\n        // 以750px，100px为1rem为基准计算当前屏幕宽度的对象的值\n        getSizePer100: function getSizePer100(size) {\n            if (!size) return;\n            size = Number(size);\n            return size * this.winW / 750;\n        },\n\n        // 初始化尺寸\n        initSize: function initSize() {\n            this.padding = this.getSizePer100(18.5);\n            // 圆环半径\n            this.ringR = this.getSizePer100(58);\n            // 圆环边框宽度\n            this.ringLineW = this.getSizePer100(4);\n            // 圆环上下左右间距\n            this.ringMargin = this.getSizePer100(68);\n            // 内圆半径\n            this.circleR = this.getSizePer100(30);\n            // 连接线宽度\n            this.lineW = this.getSizePer100(12);\n        },\n\n        // 获取canvas左上角相对于窗口的距离\n        getOffsetCanvas: function getOffsetCanvas() {\n            var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.$refs.canWrap;\n\n            var getOffsetTop = function getOffsetTop(target) {\n                var offsetTop = target.offsetTop;\n                if (target.offsetParent !== null) {\n                    offsetTop += getOffsetTop(target.offsetParent);\n                }\n                return offsetTop;\n            };\n            var getOffsetLeft = function getOffsetLeft(target) {\n                var offsetLef = target.offsetLeft;\n                if (target.offsetParent !== null) {\n                    offsetLef += getOffsetLeft(target.offsetParent);\n                }\n                return offsetLef;\n            };\n            // canvas相对窗口位置\n            this.canOffsetTop = getOffsetTop(target);\n            this.canOffsetLeft = getOffsetLeft(target);\n        },\n\n        // 获取换算为缩放后的在canvas里面的坐标\n        resolveLocation: function resolveLocation(pageX, pageY) {\n            return {\n                // 因为canvas整体缩放了4\n                x: ((pageX - this.canOffsetLeft) * 4).toFixed(2),\n                y: ((pageY - this.canOffsetTop) * 4).toFixed(4)\n            };\n        },\n\n        // 判断是否在坐标是否在点上\n        isInRing: function isInRing(x, y) {\n            for (var i = 0; i < this.ringArr.length; i++) {\n                for (var j = 0; j < this.ringArr[i].length; j++) {\n                    var originX = this.ringArr[i][j].ringCenter.x;\n                    var originY = this.ringArr[i][j].ringCenter.y;\n                    // 勾股定理计算\n                    var isLessThanR = Math.sqrt(Math.pow(Math.abs(x - originX), 2) + Math.pow(Math.abs(y - originY), 2)) < this.ringR ? true : false;\n                    if (isLessThanR) {\n                        var key = i * 3 + j;\n                        if (this.activeIndex[key]) {\n                            return;\n                        } else {\n                            this.handLock.push(key);\n                            this.activeIndex[key] = true;\n                        }\n                        this.activeArr.push(this.savePos(originX, originY));\n                        this.lastX = originX;\n                        this.lastY = originY;\n                        return isLessThanR;\n                    }\n                }\n            }\n        }\n    },\n    mounted: function mounted() {\n        var _this2 = this;\n\n        this.getWindowSize();\n        this.initSize();\n        this.initCanvas();\n        this.$nextTick(function () {\n            _this2.getOffsetCanvas();\n        });\n    }\n});\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(135);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__component_handLock__ = __webpack_require__(503);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'vHandLock',\n    components: {\n        vHandLock: __WEBPACK_IMPORTED_MODULE_1__component_handLock__[\"a\" /* vHandLock */]\n    },\n    data: function data() {\n        return {\n            pointList: [{\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }, {\n                isActive: false\n            }],\n            // 手势密码\n            handLock: [],\n            toastTxt: '请至少连接四个点',\n            // 手势密码最小长度\n            handLockMinLen: 4,\n            showToast: false,\n            // 系统\n            os: '',\n            // 手机型号\n            phoneModel: ''\n        };\n    },\n\n    methods: {\n        getHandLock: function getHandLock(handLock) {\n            this.handLock = handLock;\n            this.setActivePoint();\n            if (!this.isLegal()) {\n                this.errorDraw();\n            } else {\n                this.jumpMainPage();\n            }\n        },\n        errorDraw: function errorDraw() {\n            this.$refs.handLock.errorDraw();\n        },\n\n        // 渲染九个小点中的激活状态\n        setActivePoint: function setActivePoint() {\n            this.reSet();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.handLock), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var item = _step.value;\n\n                    this.pointList[item].isActive = true;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        },\n\n        // 重置手势密码\n        reSet: function reSet() {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.pointList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var item = _step2.value;\n\n                    item.isActive = false;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        },\n\n        // 判断手势密码长度\n        isLegal: function isLegal() {\n            if (this.handLock.length < this.handLockMinLen) {\n                this._showToast(this.toastTxt);\n                return false;\n            }\n            return true;\n        },\n\n        // 显示toast\n        _showToast: function _showToast(toastTxt) {\n            this.toastTxt = toastTxt;\n            this.showToast = true;\n        },\n\n        // 跳转至主页\n        jumpMainPage: function jumpMainPage() {\n            var jumpUrl = '/main/mainPage/index';\n            this.jumpBack({ back: jumpUrl });\n        },\n\n        // 跳转到密码登录页\n        jumpLoginPwdPage: function jumpLoginPwdPage() {\n            var jumpUrl = '/login/loginPwd/index';\n            T.Native.popWindow({\n                data: {\n                    backPage: -1,\n                    params: {}\n                },\n                options: {}\n            });\n        },\n\n        // 跳转到指纹登录\n        jumpFingerPrintsPage: function jumpFingerPrintsPage() {\n            var jumpUrl = '/login/loginFingerPrints/loginFingerPrints';\n            T.Native.pushWindow({\n                data: {\n                    path: jumpUrl,\n                    backPage: -1,\n                    params: {}\n                },\n                options: {\n                    transparentTitle: false,\n                    showTitleBar: false\n                }\n            });\n        },\n\n        // 跳转页面\n        jumpPage: function jumpPage(jumpUrl) {\n            window.T.go(jumpUrl);\n        },\n\n        // 返回页面\n        jumpBack: function jumpBack() {\n            T.Native.popWindow({\n                data: {\n                    backPage: -1,\n                    params: {}\n                },\n                options: {}\n            });\n        },\n\n        // 获取系统\n        getOs: function getOs() {\n            this.os = window.T.Device.os;\n            this.phoneModel = window.T.Device.phoneModel;\n        },\n\n        // 设置bodyclass\n        setBodyClassName: function setBodyClassName() {\n            if (this.os === 'ios' || this.os === 'android') {\n                document.body.className += ' no-padding';\n            }\n        }\n    },\n    created: function created() {\n        this.getOs();\n        this.setBodyClassName();\n    }\n});\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__handLock_vue__ = __webpack_require__(373);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__handLock_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__handLock_vue__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__handLock_vue___default.a; });\n/*\n** 手势密码组件 @auth chenzhiwen\n* @prop {String} [normalColor='#A0AAAD'] - 未激活状态的圆环颜色\n* @prop {String} [pointBgColor='rgba(111, 122, 126, .7)'] - 未激活状态的圆的背景色\n* @prop {String} [pointActiveColor='#ffffff'] - 激活的圆点颜色\n* @prop {String} [lineActiveColor='rgba(255, 255, 255, .3)'] - 激活的连接线的颜色\n* @prop {String} [errorColor='#FF3F3F'] - 显示手势密码错误的时候的颜色\n* @prop {String} [errorLineColor='rgba(255, 63, 63, .3)'] - 显示错误的时候的连接线的颜色\n* @prop {String} [errorTime='3000'] - 手势密码错误显示时间\n* @prop {Number} [canWRatio=0.7] - 手势密码区域占屏幕宽度的比例\n* @emit getHandLock - 传递手势密码出来 ex: [0, 1, 3]\n* @emit clear - 清空绘制的\n* @methods errorDraw - 绘制手势密码错误状态\n */\n\n\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__main__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__handLock_vue__ = __webpack_require__(310);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__handLock_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__handLock_vue__);\n\n\n\ninit(__WEBPACK_IMPORTED_MODULE_1__handLock_vue___default.a);\n\n/***/ }),\n\n/***/ 842:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 848:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 932:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"lock-wrap\",\n    class: [(_vm.os === 'ios' || _vm.os === 'android') ? _vm.phoneModel === 'iphoneX' ? 'ios-padding-top iphoneX' : 'ios-padding-top' : '']\n  }, [_c('div', {\n    staticClass: \"back\"\n  }, [_c('v-btn')], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dongya-logo-wrap\"\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"point-list\"\n  }, [_c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 3) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))]), _vm._v(\" \"), _c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 6 && index > 2) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))]), _vm._v(\" \"), _c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 9 && index > 5) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"lock-container\"\n  }, [_c('v-hand-lock', {\n    ref: \"handLock\",\n    on: {\n      \"getHandLock\": _vm.getHandLock,\n      \"clear\": _vm.reSet\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-wrap\"\n  }), _vm._v(\" \"), _c('v-toast', {\n    attrs: {\n      \"toastTxt\": _vm.toastTxt\n    },\n    model: {\n      value: (_vm.showToast),\n      callback: function($$v) {\n        _vm.showToast = $$v\n      },\n      expression: \"showToast\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 938:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"canWrap\",\n    staticClass: \"can-wrap\",\n    style: ({\n      height: _vm.wrapH + 'px',\n      width: _vm.wrapW + 'px'\n    })\n  }, [_c('canvas', {\n    ref: \"canvasBg\",\n    attrs: {\n      \"id\": \"canBg\"\n    }\n  }), _vm._v(\" \"), _c('canvas', {\n    ref: \"vCanvas\",\n    attrs: {\n      \"id\": \"canDraw\"\n    },\n    on: {\n      \"touchstart\": _vm.touchstart,\n      \"touchmove\": _vm.touchmove,\n      \"touchend\": _vm.touchend\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ })\n\n},[508]);\n\n\n// WEBPACK FOOTER //\n// login/handLock/handLock.js","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":false}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5f2b363e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!sass-resources-loader?{\\\"resources\\\":[\\\"/Users/huangwutao/work/turboApp/src/common/css/mixin.scss\\\",\\\"/Users/huangwutao/work/turboApp/src/common/css/variable.scss\\\"],\\\"sourceMap\\\":false}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=styles&index=0!./handLock.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=script&index=0!./handLock.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5f2b363e\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=template&index=0!./handLock.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-5f2b363e\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\nComponent.options.__file = \"/src/modules/login/handLock/handLock/handLock.vue\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/login/handLock/handLock/handLock.vue\n// module id = 310\n// module chunks = 20","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":false}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6912e334\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!sass-resources-loader?{\\\"resources\\\":[\\\"/Users/huangwutao/work/turboApp/src/common/css/mixin.scss\\\",\\\"/Users/huangwutao/work/turboApp/src/common/css/variable.scss\\\"],\\\"sourceMap\\\":false}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=styles&index=0!./handLock.vue\")\n}\nvar Component = require(\"!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=script&index=0!./handLock.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6912e334\\\",\\\"hasScoped\\\":true}!../../../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=template&index=0!./handLock.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-6912e334\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\nComponent.options.__file = \"/src/modules/login/component/handLock/handLock.vue\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/login/component/handLock/handLock.vue\n// module id = 373\n// module chunks = 20","<template>\n    <div class=\"can-wrap\" ref=\"canWrap\" :style=\"{height: wrapH + 'px', width: wrapW + 'px'}\">\n        <canvas ref=\"canvasBg\" id=\"canBg\"></canvas>\n        <canvas ref=\"vCanvas\"\n                id=\"canDraw\"\n                @touchstart=\"touchstart\"\n                @touchmove=\"touchmove\"\n                @touchend=\"touchend\"\n        ></canvas>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'vCanvas',\n        props: {\n            // 基础颜色，圆环颜色\n            normalColor: {\n                type: String,\n                default: '#A0AAAD'\n            },\n            // 圆点颜色\n            pointBgColor: {\n                type: String,\n                default: 'rgba(111, 122, 126, .7)'\n            },\n            // 圆点激活颜色\n            pointActiveColor: {\n                type: String,\n                default: '#ffffff'\n            },\n            // 连接线激活颜色\n            lineActiveColor: {\n                type: String,\n                default: 'rgba(255, 255, 255, .3)'\n            },\n            // 显示错误的时候的颜色\n            errorColor: {\n                type: String,\n                default: '#FF3F3F'\n            },\n            // 绘制错误的时候的线条颜色\n            errorLineColor: {\n                type: String,\n                default: 'rgba(255, 63, 63, .3)'\n            },\n            // 错误手势密码显示时间(ms)\n            errorTime: {\n                type: String,\n                default: '3000'\n            },\n            // canvas宽度占屏幕宽度比例\n            canWRatio: {\n                type: Number,\n                default: 0.7\n            }\n        },\n        computed: {\n            canW () {\n                return (this.winW * this.canWRatio).toFixed(2)\n            },\n            canH () {\n                return this.canW\n            },\n            wrapH () {\n                return parseInt(this.canH / 4)\n            },\n            wrapW () {\n                return parseInt(this.canW / 4)\n            }\n        },\n        data () {\n            return {\n                // 窗口宽度\n                winH: 0,\n                winW: 0,\n                // 内边距\n                padding: 0,\n                // 圆环半径\n                ringR: 0,\n                // 圆环边框宽度\n                ringLineW: 0,\n                // 圆环上下左右间距\n                ringMargin: 0,\n                // 内圆半径\n                circleR: 0,\n                // 连接线宽度\n                lineW: 0,\n                // 圆环数组，记录绘制起点及圆心位置\n                ringArr: [],\n                // 记录激活的点的坐标\n                activeArr: [],\n                // 触摸的最后的坐标\n                lastX: 0,\n                lastY: 0,\n                // 记录激活坐标点对象, 用于判断是否重复的点\n                activeIndex: {},\n                // 存储手势密码坐标点数组，包括顺讯及所有激活的点\n                handLock: [],\n                ctx: null,\n                // 错误显示定时器对象\n                errorTimer: null\n            }\n        },\n        methods: {\n            touchstart (e) {\n                this.clear()\n                let pageX = e.targetTouches[0].pageX\n                let pageY = e.targetTouches[0].pageY\n                // 获取坐标\n                let {x, y} = this.resolveLocation(pageX, pageY)\n                this.lastX = x\n                this.lastY = y\n                // 判断是否在圆上\n                this.isInRing(x, y)\n                this.initAnimation()\n            },\n            touchmove (e) {\n                e.preventDefault()\n                let pageX = e.targetTouches[0].pageX\n                let pageY = e.targetTouches[0].pageY\n                // 获取坐标\n                let {x, y} = this.resolveLocation(pageX, pageY)\n                this.lastX = x\n                this.lastY = y\n                // 判断是否在圆上\n                this.isInRing(x, y)\n                this.initAnimation()\n            },\n            touchend (e) {\n                this.initAnimation()\n                let result = this.getHandLock()\n                this.$emit('getHandLock', result)\n            },\n            // 定义动画执行的 一系列函数\n            initAnimation () {\n                this.clearCanvas()\n                this.drawActiveLine()\n                this.drawLastActiveLine(this.lastX, this.lastY)\n                this.drawActiveRing()\n            },\n            // 初始化canvas\n            initCanvas () {\n                this.canvasBg = this.$refs.canvasBg\n                this.canvas = this.$refs.vCanvas\n                this.ctxBg = this.canvasBg.getContext('2d')\n                this.ctx = this.canvas.getContext('2d')\n                let canvas = this.canvas\n                let canvasBg = this.canvasBg\n                canvas.width = this.canW\n                canvas.height = this.canH\n                canvasBg.width = this.canW\n                canvasBg.height = this.canH\n                this.drawOpacityBg()\n                this.drawAllRing(this.ctxBg)\n            },\n            // 输出手势密码结果\n            // @return [1, 2, 3]\n            getHandLock () {\n                return this.handLock\n            },\n            // 清空画布\n            clearCanvas () {\n                this.ctx.clearRect(0, 0, this.canW, this.canH)\n            },\n            // 清空绘制的 reset\n            clear () {\n                this.clearTimer()\n                this.handLock = []\n                this.activeArr = []\n                this.activeIndex = {}\n                this.clearCanvas()\n                this.$emit('clear')\n            },\n            // 错误显示绘制\n            errorDraw () {\n                this.clearCanvas()\n                this.drawActiveRing(this.errorColor)\n                this.drawActiveLine(this.errorLineColor)\n                this.errorTimer = setTimeout(() => {\n                    this.clear()\n                    clearTimeout(this.errorTimer)\n                    this.errorTimer = null\n                }, this.errorTime)\n            },\n            // 清除定时器对象\n            clearTimer () {\n                if (this.errorTimer) {\n                    clearTimeout(this.errorTimer)\n                    this.errorTimer = null\n                }\n            },\n            // 绘制透明背景\n            drawOpacityBg () {\n                this.ctxBg.fillStyle = 'rgba(255, 255, 255, 0)'\n                this.ctxBg.fillRect(0, 0, this.canW, this.canH)\n            },\n            // 绘制圆环\n            drawRing (ctx, x, y, ringBorderCol = this.normalColor) {\n                let ringR = this.ringR\n                let ringLineW = this.ringLineW\n                ringBorderCol = ringBorderCol\n                let ringBg = this.pointBgColor\n                this.drawCircle(ctx, x, y, ringR, 'fill', ringBg)\n                this.drawCircle(ctx, x, y, ringR, 'stroke', ringBorderCol, ringLineW)\n            },\n            // 绘制圆环或者圆\n            drawCircle (ctx, x, y, r, type, styleCol, lineW = 1) {\n                ctx.lineWidth = lineW\n                ctx.beginPath()\n                ctx.arc(x, y, r, 0, 2 * Math.PI)\n                ctx.closePath()\n                ctx[type + 'Style'] = styleCol\n                ctx[type]()\n            },\n            // 生成九个圆环\n            drawAllRing (ctx, ringBorderCol = this.normalColor) {\n                // 圆环间距\n                let margin = this.ringMargin\n                let x0 = this.padding + this.ringR\n                let y0 = this.padding + this.ringR\n                let x, y\n                for (let i = 0; i < 3; i++) {\n                    y = y0 + i * (margin + 2 * this.ringR)\n                    let arr = []\n                    for (let j = 0; j < 3; j++) {\n                        x = x0 + j * (margin + 2 * this.ringR)\n                        this.drawRing(ctx, x, y, ringBorderCol)\n                        arr.push(this.savePos(x, y))\n                    }\n                    this.ringArr.push(arr)\n                }\n            },\n            // 存储圆环的绘制位置以及圆心位置\n            savePos (x, y) {\n                let obj = {\n                    ringCenter: {\n                        x,\n                        y\n                    }\n                }\n                return obj\n            },\n            // 绘制激活的圆环\n            drawActiveRing (color = this.pointActiveColor) {\n                for (let item of this.activeArr) {\n                    let x = item.ringCenter.x\n                    let y = item.ringCenter.y\n                    let activeCircleR = this.circleR\n                    this.drawCircle(this.ctx, x, y, this.ringR, 'stroke', color, this.ringLineW)\n                    this.drawCircle(this.ctx, x, y, activeCircleR, 'fill', color)\n                }\n            },\n            // 绘制连接线\n            drawLine (startX, startY, endX, endY, lineColor) {\n                let ctx = this.ctx\n                ctx.lineWidth = 20\n                ctx.beginPath()\n                ctx.moveTo(startX, startY)\n                ctx.lineTo(endX, endY)\n                ctx.closePath()\n                ctx.strokeStyle = lineColor\n                ctx.stroke()\n            },\n            // 绘制激活的点的连接线\n            drawActiveLine (lineColor = this.lineActiveColor) {\n                if (this.activeArr.length < 2) return\n                for (let i = 0; i < this.activeArr.length - 1; i++) {\n                    let startX = this.activeArr[i].ringCenter.x\n                    let startY = this.activeArr[i].ringCenter.y\n                    let endX = this.activeArr[i + 1].ringCenter.x\n                    let endY = this.activeArr[i + 1].ringCenter.y\n                    this.drawLine(startX, startY, endX, endY, lineColor)\n                }\n            },\n            // 绘制最后一点到手指位置的连接线\n            drawLastActiveLine (lastX, lastY) {\n                if (this.activeArr.length < 1) return\n                let startX = this.activeArr[this.activeArr.length - 1].ringCenter.x\n                let startY = this.activeArr[this.activeArr.length - 1].ringCenter.y\n                this.drawLine(startX, startY, lastX, lastY)\n            },\n            // 获取当前窗口大小, 4 扩大四倍 ，解决高分屏模糊问题\n            getWindowSize () {\n                this.winW = window.innerWidth * 4\n                this.winH = window.innerHeight * 4\n            },\n            // 以750px，100px为1rem为基准计算当前屏幕宽度的对象的值\n            getSizePer100 (size) {\n                if (!size) return\n                size = Number(size)\n                return (size * this.winW) / 750\n            },\n            // 初始化尺寸\n            initSize () {\n                this.padding = this.getSizePer100(18.5)\n                // 圆环半径\n                this.ringR = this.getSizePer100(58)\n                // 圆环边框宽度\n                this.ringLineW = this.getSizePer100(4)\n                // 圆环上下左右间距\n                this.ringMargin = this.getSizePer100(68)\n                // 内圆半径\n                this.circleR = this.getSizePer100(30)\n                // 连接线宽度\n                this.lineW = this.getSizePer100(12)\n            },\n            // 获取canvas左上角相对于窗口的距离\n            getOffsetCanvas (target = this.$refs.canWrap) {\n                let getOffsetTop = (target) => {\n                    let offsetTop = target.offsetTop\n                    if (target.offsetParent !== null) {\n                        offsetTop += getOffsetTop(target.offsetParent)\n                    }\n                    return offsetTop\n                }\n                let getOffsetLeft = (target) => {\n                    let offsetLef = target.offsetLeft\n                    if (target.offsetParent !== null) {\n                        offsetLef += getOffsetLeft(target.offsetParent)\n                    }\n                    return offsetLef\n                }\n                // canvas相对窗口位置\n                this.canOffsetTop = getOffsetTop(target)\n                this.canOffsetLeft = getOffsetLeft(target)\n            },\n            // 获取换算为缩放后的在canvas里面的坐标\n            resolveLocation (pageX, pageY) {\n                return {\n                    // 因为canvas整体缩放了4\n                    x: ((pageX - this.canOffsetLeft) * 4).toFixed(2),\n                    y: ((pageY - this.canOffsetTop) * 4).toFixed(4)\n                }\n            },\n            // 判断是否在坐标是否在点上\n            isInRing (x, y) {\n                for (let i = 0; i < this.ringArr.length; i++) {\n                    for (let j = 0; j < this.ringArr[i].length; j++) {\n                        let originX = this.ringArr[i][j].ringCenter.x\n                        let originY = this.ringArr[i][j].ringCenter.y\n                        // 勾股定理计算\n                        let isLessThanR = Math.sqrt(Math.pow(Math.abs(x - originX), 2) + Math.pow(Math.abs(y - originY), 2)) < this.ringR ? true : false\n                        if (isLessThanR) {\n                            let key = (i * 3) + j\n                            if (this.activeIndex[key]) {\n                                return\n                            } else {\n                                this.handLock.push(key)\n                                this.activeIndex[key] = true\n                            }\n                            this.activeArr.push(this.savePos(originX, originY))\n                            this.lastX = originX\n                            this.lastY = originY\n                            return isLessThanR\n                        }\n                    }\n                }\n            }\n        },\n        mounted () {\n            this.getWindowSize()\n            this.initSize()\n            this.initCanvas()\n            this.$nextTick(() => {\n                this.getOffsetCanvas()\n            })\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .can-wrap {\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        canvas {\n            position: absolute;\n            top: 0;\n            left: 0;\n            transform: scale3d(.25, .25, .25);\n            transform-origin: left top;\n            z-index: 2;\n        }\n        #canBg {\n            z-index: 1;\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// handLock.vue?3030e517","<template>\n        <div class=\"lock-wrap\"\n             :class=\"[(os === 'ios' || os === 'android') ? phoneModel === 'iphoneX' ? 'ios-padding-top iphoneX' : 'ios-padding-top' : '']\"\n        >\n            <div class=\"back\">\n                <v-btn></v-btn>\n            </div>\n            <div class=\"dongya-logo-wrap\">\n            </div>\n            <ul class=\"point-list\">\n                <li class=\"item\">\n                    <ul class=\"item-list\">\n                        <li class=\"point\"\n                            v-for=\"(item, index) in pointList\"\n                            :key=\"index\"\n                            v-if=\"index < 3\"\n                            :class=\"{active: item.isActive}\"\n                        ></li>\n                    </ul>\n                </li>\n                <li class=\"item\">\n                    <ul class=\"item-list\">\n                        <li class=\"point\"\n                            v-for=\"(item, index) in pointList\"\n                            :key=\"index\"\n                            v-if=\"index < 6 && index > 2\"\n                            :class=\"{active: item.isActive}\"\n                        ></li>\n                    </ul>\n                </li>\n                <li class=\"item\">\n                    <ul class=\"item-list\">\n                        <li class=\"point\"\n                            v-for=\"(item, index) in pointList\"\n                            :key=\"index\"\n                            v-if=\"index < 9 && index > 5\"\n                            :class=\"{active: item.isActive}\"\n                        ></li>\n                    </ul>\n                </li>\n            </ul>\n            <div class=\"lock-container\">\n                <v-hand-lock @getHandLock=\"getHandLock\" @clear=\"reSet\" ref=\"handLock\"></v-hand-lock>\n            </div>\n            <div class=\"btn-wrap\">\n                <!-- <span @click=\"jumpLoginPwdPage\">密码登录</span>\n                <i class=\"bar\"></i>\n                <span @click=\"jumpFingerPrintsPage\">指纹登录</span> -->\n            </div>\n            <v-toast v-model=\"showToast\" :toastTxt=\"toastTxt\"></v-toast>\n        </div>\n</template>\n\n<script>\n    import {vHandLock} from '../../component/handLock'\n    export default {\n        name: 'vHandLock',\n        components: {\n            vHandLock\n        },\n        data () {\n            return {\n                pointList: [\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    },\n                    {\n                        isActive: false\n                    }\n                ],\n                // 手势密码\n                handLock: [],\n                toastTxt: '请至少连接四个点',\n                // 手势密码最小长度\n                handLockMinLen: 4,\n                showToast: false,\n                // 系统\n                os: '',\n                // 手机型号\n                phoneModel: ''\n            }\n        },\n        methods: {\n            getHandLock (handLock) {\n                this.handLock= handLock\n                this.setActivePoint()\n                if (!this.isLegal()) {\n                    this.errorDraw()\n                } else {\n                    this.jumpMainPage()\n                }\n            },\n            errorDraw () {\n                this.$refs.handLock.errorDraw()\n            },\n            // 渲染九个小点中的激活状态\n            setActivePoint () {\n                this.reSet()\n                for (let item of this.handLock) {\n                    this.pointList[item].isActive = true\n                }\n            },\n            // 重置手势密码\n            reSet () {\n                for (let item of this.pointList) {\n                    item.isActive = false\n                }\n            },\n            // 判断手势密码长度\n            isLegal () {\n                if (this.handLock.length < this.handLockMinLen) {\n                    this._showToast(this.toastTxt)\n                    return false\n                }\n                return true\n            },\n            // 显示toast\n            _showToast (toastTxt) {\n                this.toastTxt = toastTxt\n                this.showToast = true\n            },\n            // 跳转至主页\n            jumpMainPage () {\n                let jumpUrl = '/main/mainPage/index'\n                this.jumpBack({back: jumpUrl})\n            },\n            // 跳转到密码登录页\n            jumpLoginPwdPage () {\n                let jumpUrl = '/login/loginPwd/index'\n                T.Native.popWindow({\n                    data : {\n                        backPage : -1,\n                        params : {}\n                    },\n                    options : {}\n                })\n            },\n            // 跳转到指纹登录\n            jumpFingerPrintsPage () {\n                let jumpUrl = '/login/loginFingerPrints/loginFingerPrints'\n                T.Native.pushWindow(\n                    {\n                        data : {\n                            path : jumpUrl,\n                            backPage : -1,\n                            params : {} ,\n                        },\n                        options : {\n                            transparentTitle : false,\n                            showTitleBar : false,\n                        }    \n                    },\n                )\n            },\n            // 跳转页面\n            jumpPage (jumpUrl) {\n                window.T.go(jumpUrl)\n            },\n            // 返回页面\n            jumpBack () {\n                T.Native.popWindow({\n                    data : {\n                        backPage : -1,\n                        params : {}\n                    },\n                    options : {}\n                })\n            },\n            // 获取系统\n            getOs () {\n                this.os = window.T.Device.os\n                this.phoneModel = window.T.Device.phoneModel\n            },\n            // 设置bodyclass\n            setBodyClassName () {\n                if (this.os === 'ios' || this.os === 'android') {\n                    document.body.className += ' no-padding'\n                }\n            }\n        },\n        created () {\n            this.getOs()\n            this.setBodyClassName()\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    *{\n        box-sizing: border-box;\n    }\n    .lock-wrap{\n        background: url(\"./images/login-bg-mohu.jpg\") no-repeat center top;\n        background-size: 100% 100%;\n        height: 100%;\n        width: 100%;\n        padding-bottom: px2rem(60);\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n        .back {\n            width: 100%;\n            height: px2rem(80);\n            color: #ffffff;\n            display: flex;\n            align-items: center;\n            box-sizing: border-box;\n        }\n        .dongya-logo-wrap {\n            width: px2rem(414);\n            height: px2rem(140);\n            background: url(\"./images/dongya-logo@3x.png\") no-repeat center;\n            background-size: 100%;\n        }\n        .point-list{\n            width: px2rem(72);\n            height: px2rem(72);\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            .item-list{\n                display: flex;\n                justify-content: space-between;\n                .point{\n                    border-radius: 50%;\n                    background-color: #ACB3B7;\n                    width: px2rem(15);\n                    height: px2rem(15);\n                    &.active{\n                        background-color: #ffffff;\n                    }\n                }\n            }\n        }\n        .lock-container{\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            align-content: center;\n        }\n        .btn-wrap{\n            width: px2rem(282);\n            height: px2rem(28);\n            color: #9B9B9B;\n            font-size: px2rem(28);\n            line-height: px2rem(28);\n            font-family:PingFangSC-Regular;\n            display: flex;\n            justify-content: space-between;\n            @include font-color(#9B9B9B);\n            .bar{\n                height: 100%;\n                border-right: 1px solid #9B9B9B;\n            }\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// handLock.vue?4f4bf016","/*\n** 手势密码组件 @auth chenzhiwen\n* @prop {String} [normalColor='#A0AAAD'] - 未激活状态的圆环颜色\n* @prop {String} [pointBgColor='rgba(111, 122, 126, .7)'] - 未激活状态的圆的背景色\n* @prop {String} [pointActiveColor='#ffffff'] - 激活的圆点颜色\n* @prop {String} [lineActiveColor='rgba(255, 255, 255, .3)'] - 激活的连接线的颜色\n* @prop {String} [errorColor='#FF3F3F'] - 显示手势密码错误的时候的颜色\n* @prop {String} [errorLineColor='rgba(255, 63, 63, .3)'] - 显示错误的时候的连接线的颜色\n* @prop {String} [errorTime='3000'] - 手势密码错误显示时间\n* @prop {Number} [canWRatio=0.7] - 手势密码区域占屏幕宽度的比例\n* @emit getHandLock - 传递手势密码出来 ex: [0, 1, 3]\n* @emit clear - 清空绘制的\n* @methods errorDraw - 绘制手势密码错误状态\n */\n\nexport {default as vHandLock} from './handLock.vue'\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/login/component/handLock/index.js","import '@/main'\nimport Cmp from './handLock.vue'\n\ninit(Cmp)\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/login/handLock/handLock/main.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"lock-wrap\",\n    class: [(_vm.os === 'ios' || _vm.os === 'android') ? _vm.phoneModel === 'iphoneX' ? 'ios-padding-top iphoneX' : 'ios-padding-top' : '']\n  }, [_c('div', {\n    staticClass: \"back\"\n  }, [_c('v-btn')], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dongya-logo-wrap\"\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"point-list\"\n  }, [_c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 3) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))]), _vm._v(\" \"), _c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 6 && index > 2) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))]), _vm._v(\" \"), _c('li', {\n    staticClass: \"item\"\n  }, [_c('ul', {\n    staticClass: \"item-list\"\n  }, _vm._l((_vm.pointList), function(item, index) {\n    return (index < 9 && index > 5) ? _c('li', {\n      key: index,\n      staticClass: \"point\",\n      class: {\n        active: item.isActive\n      }\n    }) : _vm._e()\n  }))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"lock-container\"\n  }, [_c('v-hand-lock', {\n    ref: \"handLock\",\n    on: {\n      \"getHandLock\": _vm.getHandLock,\n      \"clear\": _vm.reSet\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-wrap\"\n  }), _vm._v(\" \"), _c('v-toast', {\n    attrs: {\n      \"toastTxt\": _vm.toastTxt\n    },\n    model: {\n      value: (_vm.showToast),\n      callback: function($$v) {\n        _vm.showToast = $$v\n      },\n      expression: \"showToast\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-5f2b363e\",\"hasScoped\":true}!./~/_vue-loader@12.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/modules/login/handLock/handLock/handLock.vue\n// module id = 932\n// module chunks = 20","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"canWrap\",\n    staticClass: \"can-wrap\",\n    style: ({\n      height: _vm.wrapH + 'px',\n      width: _vm.wrapW + 'px'\n    })\n  }, [_c('canvas', {\n    ref: \"canvasBg\",\n    attrs: {\n      \"id\": \"canBg\"\n    }\n  }), _vm._v(\" \"), _c('canvas', {\n    ref: \"vCanvas\",\n    attrs: {\n      \"id\": \"canDraw\"\n    },\n    on: {\n      \"touchstart\": _vm.touchstart,\n      \"touchmove\": _vm.touchmove,\n      \"touchend\": _vm.touchend\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-6912e334\",\"hasScoped\":true}!./~/_vue-loader@12.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/modules/login/component/handLock/handLock.vue\n// module id = 938\n// module chunks = 20"],"sourceRoot":""}